buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {}
}

apply plugin: 'base'
apply plugin: 'jetty'

ext{
	default_env = 'dev'
	
	local_info_url = 'info.html'
	local_apply_url = '//www.semsnycdoe.com/parentsite'
	local_geoclient_url = 'http://maps.nyc.gov/geoclient/v1/search.json?app_key=572204d6172746961&app_id=citymap-gis&input='
	local_basemap_urls = '["//maps.nyc.gov/gis/data/tiles/basic/", "//maps1.nyc.gov/gis/data/tiles/basic/", "//maps2.nyc.gov/gis/data/tiles/basic/", "//maps3.nyc.gov/gis/data/tiles/basic/"]'
	
	dev_info_url = 'info.html' //TODO is there a dev url
	dev_apply_url = '//www.semsnycdoe.com/parentsite' //TODO is there a dev url
	dev_geoclient_url = 'http://csgis-dev-web.csc.nycnet/geoclient/v1/search.json?app_key=572204d6172746961&app_id=citymap-gis&input='
	dev_basemap_urls = '["//csgis-dev-web.csc.nycnet/gis/data/tiles/basic/"]'
	
	stg_info_url = 'http://schoolsstg.nycenet.edu/schoolsearch/info.html'
	stg_apply_url = '//www.semsnycdoe.com/parentsite' //TODO is there a stg url
	stg_geoclient_url = 'http://csgis-stg-prx.csc.nycnet/geoclient/v1/search.json?app_key=572204d6172746961&app_id=citymap-gis&input='
	stg_basemap_urls = '["//csgis-stg-prx.csc.nycnet/gis/data/tiles/basic/"]'
	
	prd_info_url = '//www.nycenet.edu/schoolsearch/info.html'
	prd_apply_url = '//www.semsnycdoe.com/parentsite'
	prd_geoclient_url = 'http://maps.nyc.gov/geoclient/v1/search.json?app_key=572204d6172746961&app_id=citymap-gis&input='
	prd_basemap_urls = '["//maps.nyc.gov/gis/data/tiles/basic/", "//maps1.nyc.gov/gis/data/tiles/basic/", "//maps2.nyc.gov/gis/data/tiles/basic/", "//maps3.nyc.gov/gis/data/tiles/basic/"]'
}

task copyFiles << {
	def build = new File('build/webapp')
	build.mkdirs()
	copy {
		from 'src/main/webapp'
		into 'build/webapp' 
	}
}

task rewriteConstants(dependsOn: [clean, copyFiles]) << {
	def env = project.hasProperty('env') ? env : default_env
	def infoUrl = project.ext["${env}_info_url"];
	def applyUrl = project.ext["${env}_apply_url"];
	def geoUrl = project.ext["${env}_geoclient_url"];
	def baseUrls = project.ext["${env}_basemap_urls"];

 	println "\nbuilding for env=${env}...\n"
 	println "INFO_URL=${infoUrl}"
 	println "APPLY_URL=${applyUrl}" 
 	println "GEOCLIENT_URL=${geoUrl}"
 	println "BASEMAP_URLS=${baseUrls}\n"
 	
	ant.taskdef(name: 'replace', classname: 'org.apache.tools.ant.taskdefs.Replace')	
	ant.replace(file: 'build/webapp/js/nyc/constants.js', token: local_info_url, value: infoUrl)
	ant.replace(file: 'build/webapp/js/nyc/constants.js', token: local_apply_url, value: applyUrl)
	ant.replace(file: 'build/webapp/js/nyc/constants.js', token: local_geoclient_url, value: geoUrl)
	ant.replace(file: 'build/webapp/js/nyc/constants.js', token: local_basemap_urls, value: baseUrls)
}

jettyRun {
	webAppSourceDirectory file('./')
	contextPath ''
	httpPort 8088
	stopPort 8090
	stopKey 'stopKey'
	reload 'automatic'
	scanIntervalSeconds 2
}

jettyStop {
	stopPort 8090
	stopKey 'stopKey'
}

task wrapper(type: Wrapper) {
    gradleVersion '2.3'
}

